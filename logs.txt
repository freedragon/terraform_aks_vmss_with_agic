ERROR: logging before flag.Parse: I0530 14:00:12.811816       1 utils.go:105] Using verbosity level 5 from environment variable APPGW_VERBOSITY_LEVEL
I0530 14:00:12.838073       1 environment.go:210] KUBERNETES_WATCHNAMESPACE is not set. Watching all available namespaces.
I0530 14:00:12.838219       1 main.go:124] App Gateway Details: Subscription: eb9eeefb-3029-4cda-b478-ab3dcbe7476c, Resource Group: cmbt-tf-aks01-rg, Name: cmbt-tf-apgw
I0530 14:00:12.838251       1 auth.go:46] Creating authorizer from Azure Managed Service Identity
I0530 14:00:12.838329       1 httpserver.go:57] Starting API Server on :8123
E0530 14:08:44.866944       1 client.go:139] Got 404 NOT FOUND status code on getting Application Gateway from ARM.
E0530 14:08:44.866989       1 event.go:296] Could not construct reference to: '&v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"ingress-azure-77cf644d76-hzkqg", GenerateName:"ingress-azure-77cf644d76-", Namespace:"default", SelfLink:"/api/v1/namespaces/default/pods/ingress-azure-77cf644d76-hzkqg", UID:"c92a3344-8635-4a84-9845-380f22cb7a34", ResourceVersion:"2738", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63726443485, loc:(*time.Location)(0x219eec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"aadpodidbinding":"ingress-azure", "app":"ingress-azure", "pod-template-hash":"77cf644d76", "release":"ingress-azure"}, Annotations:map[string]string{"prometheus.io/port":"8123", "prometheus.io/scrape":"true"}, OwnerReferences:[]v1.OwnerReference{v1.OwnerReference{APIVersion:"apps/v1", Kind:"ReplicaSet", Name:"ingress-azure-77cf644d76", UID:"6ca5ed80-a01e-4983-94a3-cf19a9e584fc", Controller:(*bool)(0xc000048ffa), BlockOwnerDeletion:(*bool)(0xc000048ffb)}}, Initializers:(*v1.Initializers)(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"azure", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(0xc000030ee0), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}, v1.Volume{Name:"ingress-azure-token-9rvnt", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(0xc000156c40), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(nil), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil)}}}, InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"ingress-azure", Image:"mcr.microsoft.com/azure-application-gateway/kubernetes-ingress:1.2.0-rc1", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource{v1.EnvFromSource{Prefix:"", ConfigMapRef:(*v1.ConfigMapEnvSource)(0xc000030f20), SecretRef:(*v1.SecretEnvSource)(nil)}}, Env:[]v1.EnvVar{v1.EnvVar{Name:"AZURE_CLOUD_PROVIDER_LOCATION", Value:"/etc/appgw/azure.json", ValueFrom:(*v1.EnvVarSource)(nil)}, v1.EnvVar{Name:"AGIC_POD_NAME", Value:"", ValueFrom:(*v1.EnvVarSource)(0xc000030f40)}, v1.EnvVar{Name:"AGIC_POD_NAMESPACE", Value:"", ValueFrom:(*v1.EnvVarSource)(0xc000030f80)}}, Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"azure", ReadOnly:false, MountPath:"/etc/appgw/azure.json", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}, v1.VolumeMount{Name:"ingress-azure-token-9rvnt", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(0xc0000f42a0), ReadinessProbe:(*v1.Probe)(0xc0000f42d0), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0000491c0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"ingress-azure", DeprecatedServiceAccount:"ingress-azure", AutomountServiceAccountToken:(*bool)(nil), NodeName:"aks-defnodepool-12460617-vmss000001", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0005934a0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc000049260)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc000049280)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0000492a0), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0000492a4), PreemptionPolicy:(*v1.PreemptionPolicy)(nil)}, Status:v1.PodStatus{Phase:"Running", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"True", LastProbeTime:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63726443485, loc:(*time.Location)(0x219eec0)}}, Reason:"", Message:""}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63726443485, loc:(*time.Location)(0x219eec0)}}, Reason:"ContainersNotReady", Message:"containers with unready status: [ingress-azure]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63726443485, loc:(*time.Location)(0x219eec0)}}, Reason:"ContainersNotReady", Message:"containers with unready status: [ingress-azure]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63726443485, loc:(*time.Location)(0x219eec0)}}, Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"123.0.0.65", PodIP:"123.0.0.67", StartTime:(*v1.Time)(0xc000030fc0), InitContainerStatuses:[]v1.ContainerStatus(nil), ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"ingress-azure", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002fea80)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"mcr.microsoft.com/azure-application-gateway/kubernetes-ingress:1.2.0-rc1", ImageID:"docker-pullable://mcr.microsoft.com/azure-application-gateway/kubernetes-ingress@sha256:dd95b2feaf24e7ba6773452fb842d0eba5a6ea8a5d19bf22035fdcad78b18941", ContainerID:"docker://6270ac54490025f60abc3a4de550a78d85e175948c1cc1a1c6eb96c15990f73f"}}, QOSClass:"BestEffort"}}' due to: 'no kind is registered for the type v1.Pod in scheme "pkg/runtime/scheme.go:101"'. Will not report event: 'Warning' 'ARMAuthFailure' 'Failed authenticating with Azure Resource Manager: unable to find Application Gateway (AZUR005)'
F0530 14:08:44.868351       1 main.go:157] Failed authenticating with Azure Resource Manager: unable to find Application Gateway (AZUR005)
